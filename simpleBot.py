# –ë–æ—Ç –Ω–∞ Aiogram
# https://surik00.gitbooks.io/aiogram-lessons/content/chapter1.html
from bot_name import bot
import telebot
from telebot import types

token = bot

my_bot = telebot.TeleBot(token)

kb = types.ReplyKeyboardMarkup(row_width=2)
btn1 = types.KeyboardButton('/url')
btn2 = types.KeyboardButton('/flag')
kb.add(btn1, btn2)


@my_bot.message_handler(commands=['start'])
def start_message(message):
    my_bot.send_message(message.chat.id, '–Ø –∑–∞–ø—É—â–µ–Ω.',
                        reply_markup=kb)


@my_bot.message_handler(commands=['help'])
def help_message(message):
    my_bot.send_message(message.chat.id, '–Ø –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ –í–∞—à–µ —ç—Ö–æ.')


@my_bot.message_handler(commands=['url'])
def url_message(message):
    # inline-keyboard
    markup = types.InlineKeyboardMarkup()
    # –ù–∞–∑–Ω–∞—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
    btn1 = types.InlineKeyboardButton(text='–°–∞–π—Ç –ò–ü–ê–ü', url='https://ipap.ru')
    btn2 = types.InlineKeyboardButton(text='–°–∞–π—Ç –Ø–Ω–¥–µ–∫—Å', url='https://ya.ru')
    # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∫ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
    markup.add(btn1, btn2)
    my_bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å–∞–π—Ç:',
                        reply_markup=markup)


# –í—ã–≤–æ–¥ —Ñ–æ—Ç–æ
@my_bot.message_handler(commands=['flag'])
def show_flag(message):
    with open('static/images/flag.jpg', 'rb') as flag:
        my_bot.send_photo(message.chat.id, flag, caption='–§–ª–∞–≥')


@my_bot.message_handler(content_types=['text'])
def parrot(message):
    if message.text.strip().lower() == '–ø—Ä–∏–≤–µ—Ç':
        my_bot.send_message(message.chat.id,
                            '<a href="https://mail.ru">MAIL</a>',
                            parse_mode='HTML')
    elif message.text.strip().lower() == '–∫–∞–∫ –¥–µ–ª–∞?':
        # inline-keyboard
        answer = types.InlineKeyboardMarkup(row_width=2)
        # –ù–∞–∑–Ω–∞—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
        btn_good = types.InlineKeyboardButton('–•–æ—Ä–æ—à–æ', callback_data='good')
        btn_bad = types.InlineKeyboardButton('–ü–ª–æ—Ö–æ', callback_data='bad')
        answer.add(btn_good, btn_bad)
        my_bot.send_message(message.chat.id, '–£ –º–µ–Ω—è —Ö–æ—Ä–æ—à–æ, –∞ —É —Ç–µ–±—è?',
                            reply_markup=answer)
    else:
        my_bot.send_message(message.chat.id, f'–í—ã —Å–∫–∞–∑–∞–ª–∏: {message.text}')


@my_bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.data == 'bad':
        my_bot.send_message(call.message.chat.id, '–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π üåû')
    if call.data == 'good':
        my_bot.send_message(call.message.chat.id, '–û! –û—Ç–ª–∏—á–Ω–æ üòÉ')


my_bot.infinity_polling(none_stop=True)
